# Generated by Django 3.2.4 on 2021-07-17 05:59

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Blog Title Info')),
                ('slug', models.SlugField(blank=True, max_length=256, null=True, unique=True, verbose_name='Link name(slug field)')),
                ('author', models.EmailField(blank=True, max_length=120, null=True, verbose_name='email address of Author')),
                ('updated_on', models.DateTimeField(blank=True, null=True, verbose_name='Blog post modified Time')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Blog Content')),
                ('created_on', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Blog post created time')),
                ('status', models.IntegerField(choices=[(0, 'in Draft'), (1, 'Published')], default=0)),
                ('postImage', models.ImageField(blank=True, null=True, upload_to='blog-image/%Y/%m/%d/', verbose_name='Post-related-image')),
            ],
            options={
                'verbose_name': 'BlogPost',
                'verbose_name_plural': 'BlogPost',
                'db_table': 'blogpost',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('contact_id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_name', models.CharField(max_length=64, verbose_name="contact person's name")),
                ('contact_time', models.DateTimeField(verbose_name='at Bangladesh Time')),
                ('contact_mail', models.EmailField(max_length=120, verbose_name="contact's email address")),
                ('contact_phone', phone_field.models.PhoneField(max_length=31, verbose_name='Contact phone number')),
                ('contact_msg', models.TextField(verbose_name="contact's message")),
            ],
            options={
                'verbose_name': 'ContactUs',
                'verbose_name_plural': 'ContactUs',
                'db_table': 'contact',
                'ordering': ['-contact_time'],
            },
        ),
        migrations.CreateModel(
            name='JobRequest',
            fields=[
                ('participant_id', models.AutoField(primary_key=True, serialize=False)),
                ('participant_name', models.CharField(help_text="participant's name", max_length=64)),
                ('participant_time', models.DateTimeField(help_text='Local BanglDesh Time')),
                ('participant_mail', models.EmailField(help_text="participant's email address", max_length=120)),
                ('participant_phone', phone_field.models.PhoneField(help_text="participant's phone number", max_length=31)),
                ('participant_linkedIn', models.URLField(blank=True, help_text="participant's Linkedin Profile Link", null=True, verbose_name='LinkidIn-Id')),
                ('participant_github', models.URLField(blank=True, help_text="participant's Github Profile Link", null=True, verbose_name='Github-Id')),
                ('participant_msg', models.TextField(help_text="participant's msg to get job")),
                ('participant_resume', models.FileField(blank=True, null=True, upload_to='resume/%Y/%m/%d/', verbose_name='Resume')),
                ('participant_cover_letter', models.FileField(blank=True, null=True, upload_to='cover-letter/%Y/%m/%d/', verbose_name='Cover-Letter')),
            ],
            options={
                'verbose_name': 'JobRequest',
                'verbose_name_plural': 'JobRequest',
                'db_table': 'jobrequest',
                'ordering': ['-participant_time'],
            },
        ),
        migrations.CreateModel(
            name='LatestProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_preview', models.ImageField(blank=True, null=True, upload_to='project_preview/%Y/%m/', verbose_name='Project-slider-related-image(preview)')),
                ('project_title', models.CharField(blank=True, help_text='Project Title', max_length=256, null=True)),
                ('project_client', models.CharField(blank=True, help_text="Project's client descriptions", max_length=256, null=True)),
                ('project_industries', models.CharField(blank=True, help_text='Helpful to which which industries', max_length=256, null=True)),
                ('project_services', models.CharField(blank=True, help_text='Services provided during this project', max_length=256, null=True)),
                ('project_technologies', models.CharField(blank=True, help_text='Technologies used in this Project', max_length=256, null=True)),
                ('project_challenges', models.TextField(blank=True, help_text='Challenges faced to complete this project & the scope of this project', null=True)),
                ('project_solution', models.TextField(blank=True, help_text='Broad description of what solution brings this project', null=True)),
                ('project_solution_pic', models.ImageField(blank=True, help_text='Project-solution-related-image will be best for jpeg format', null=True, upload_to='project_solutions/%Y/%m/')),
                ('project_impact', models.TextField(blank=True, help_text='Broad description of what impact brings this project', null=True)),
                ('project_impact_pic', models.ImageField(blank=True, help_text='Project-impact-related-image will be best for jpeg format', null=True, upload_to='project_impacts/%Y/%m/')),
                ('project_uploaded_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='Project handover/uploaded time', null=True, verbose_name='Project uploaded time')),
                ('project_slug', models.SlugField(blank=True, max_length=256, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'LatestProject',
                'verbose_name_plural': 'LatestProjects',
                'db_table': 'latestprojects',
                'ordering': ['-project_uploaded_time'],
            },
        ),
        migrations.CreateModel(
            name='OurClients',
            fields=[
                ('client_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_name', models.CharField(blank=True, help_text="Client's individual name or Company name", max_length=256, null=True)),
                ('client_logo', models.ImageField(blank=True, null=True, upload_to='client_Logo/%Y/%m/%d/', verbose_name='client image/logo')),
                ('client_mail', models.EmailField(blank=True, help_text="Client's email address", max_length=120, null=True)),
                ('client_phone', models.IntegerField(blank=True, help_text="Client's phone number", null=True)),
                ('client_address', models.CharField(blank=True, help_text="Client's Home/Office Address", max_length=256, null=True)),
                ('client_project_title', models.CharField(blank=True, help_text="Client's Project Title We Have Done", max_length=256, null=True)),
                ('client_project_link', models.URLField(blank=True, help_text='Github/GitLab repo link of Client work we have done', max_length=256, null=True)),
                ('client_agreement_date', models.DateTimeField(blank=True, help_text="Client came to us/client's project delivery date", null=True)),
                ('client_payment', models.IntegerField(blank=True, help_text="Client's paid amount", null=True, verbose_name="Client's Payment")),
            ],
            options={
                'verbose_name': 'OurClients',
                'verbose_name_plural': 'OurClients',
                'db_table': 'ourclients',
                'ordering': ['-client_id'],
            },
        ),
        migrations.CreateModel(
            name='SoftwareCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='project_impacts/%Y/%m/', verbose_name='Company-logo-should-be-nice')),
                ('company_name', models.CharField(blank=True, max_length=120, null=True, verbose_name='company-name')),
                ('company_mail', models.EmailField(blank=True, max_length=120, null=True, verbose_name='company-official-mail-address')),
                ('company_phone', phone_field.models.PhoneField(blank=True, max_length=31, null=True, verbose_name='company-official-phone-number')),
                ('company_address', models.CharField(blank=True, max_length=256, null=True, verbose_name='company-office-address')),
                ('company_description', models.TextField(blank=True, null=True, verbose_name='Company-description-why-choose-us?')),
                ('years_of_experiences', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='years-of-experience')),
                ('years_of_collaborations', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='years-of-collaborations-with-client')),
                ('clients_total_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='total-clients-number')),
                ('experts_hired_total', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='total-experts-hired-uptill')),
                ('product_delivers_total', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='total-product-delivered-uptill')),
            ],
            options={
                'verbose_name': 'SoftwareCompany',
                'verbose_name_plural': 'SoftwareCompany',
                'db_table': 'softwarecompany',
            },
        ),
        migrations.CreateModel(
            name='CommentBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentator_name', models.CharField(max_length=120, verbose_name="Commentator's name")),
                ('commentator_email', models.EmailField(max_length=120, verbose_name="Commentator's email address")),
                ('comment_body', models.TextField(verbose_name='Comment Content')),
                ('comment_posted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Comment posted time')),
                ('comment_status', models.IntegerField(choices=[(0, 'in Draft'), (1, 'Published')], default=0)),
                ('commented_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='aztech.blogpost')),
            ],
            options={
                'verbose_name': 'CommentBox',
                'verbose_name_plural': 'CommentBox',
                'db_table': 'commentbox',
                'ordering': ['-comment_posted_at'],
            },
        ),
    ]
